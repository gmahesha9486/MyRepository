
https://www.tutorialspoint.com/spring/spring_java_based_configuration.htm
Annotating a class with the @Configuration indicates that the class can be used by the Spring IoC container as a source of bean definitions. The @Bean annotation tells Spring that a method annotated with @Bean will return an object that should be registered as a bean in the Spring application context

Proxy scoped bean
http://stackoverflow.com/questions/14371335/spring-scoped-proxy-bean

Spring Tool suite (STS)
Stateless and statefull bean
use singleton scope for statelesss bean
use prototype scopes for staefull bean

Context namespace is required for the application.properties file reference.

p namespace

<bean id="helloBeanTest" class="com.mkyong.core.HelloWorld">
	<constructor-arg index="0" value="Suresh123"/>
</bean>
// Instead of above , you can use
<bean id="helloBeanTest" class="com.mkyong.core.HelloWorld">
	<constructor-arg name="myName" value="Suresh123"/>
</bean>
//myName is the member variable.
	
<bean id="fruit" class="com.mkyong.core.Fruit">
	<property name="name" value="orange" />
</bean>


<bean id="fruitBean" class="com.mkyong.core.Fruit">
		<property name="fruitNameList">
			<list>
				<value>orange</value>
				<value>apple</value>
				<value>banana</value>
			</list>
		</property>
		
		<property name="fruitNameMap">
			<map>
				<entry key="apple" value="red"/>
				<entry key="banana" value="yello"/>
			</map>
		</property>
		
</bean>


Fruit as below member variables
private String name;
private List<String> fruitNameList;
private Map<String,String>fruitNameMap; 

<bean id="fruit" class="abc.fruit" p:myName="Suresh"/>

myName is member variable.


Inner bean
<bean id="mealOuterBean" class="food.Meal">
	<property name="fruit">
	<bean id="appleInnerBean" class="food.Apple">
		<property name="name" value="apple" />
		<property name="description" value="I am an apple. I am typically red or green with crisp flesh" />
	</bean>
	</property>
</bean> 
