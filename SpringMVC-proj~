springMVCDemo\src\main\java\com\demo\controllers

package com.demo.controllers;

import java.util.Random;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.demo.model.Account;


@Controller
public class MyDemoController {

	
	  private String[] quotes= {"quote 1","quote 2","quote 3"};
	  
	  @RequestMapping(value="/getQuote")	
	  public String getRandomQuote(ModelMap model) {
			
		  	int rand = new Random().nextInt(quotes.length);
		  	
		  	String randomQuote = quotes[rand];
		  	
			model.addAttribute("randomQuote", randomQuote);
			
			//model.addAllAttributes("randomQuote","Test 123");
			
			return "quote";  //Its view name
		}
	  
	     
		@RequestMapping(value="/createAccount")
	  	public String createAccount(@ModelAttribute ("aNewAccount")Account account, BindingResult result ) {
	  		
	  		if(result.hasErrors()) {
	  			System.out.println("Form has errors");
	  			return "createAccount";
	  		}
	  		System.out.println("First name="+account.getFirstName() +"  Last name="+account.getLastName());
	  		
	  		return "createAccount";
	  	}
	  	
		
	  	@RequestMapping(value="/accountCreated",method=RequestMethod.POST)	
		 public String performCreate(Account account) {
	  		 
	  		System.out.println("First name="+account.getFirstName() +"  Last name="+account.getLastName());
	  		System.out.println("Address="+account.getAddress() +"  Age="+account.getAge());
	  		
	  		return "accountCreated";
	  	 }
	  
	  	@RequestMapping(value="/myForm")
	  	public String myForm() {
	  	
	  			return "myForm";
	  	}
	  	
	  	@RequestMapping(value="/handleForm")
	  	public String handleForm(@RequestParam("myFile") MultipartFile file){
	  		
	  		try {
	  			System.out.println("Save the file here");
	  		}catch(Exception e) {
	  			System.out.println(e);
	  		}
	  		return "operationComplete";
	  	}
	  	
}

----------------------------

D:\project\Spring-projects\SpringMVC\springMVCDemo\src\main\webapp\WEB-INF
web.xml

<?xml version="1.0" encoding="utf-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">
	
	<display-name>My Demo App</display-name>

	<servlet>
		<servlet-name>MyDemoApp</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/myDemoApp-ServletConfig.xml</param-value>
		</init-param>   
	   <load-on-startup>1</load-on-startup>    
	</servlet>

	<servlet-mapping>
		<servlet-name>MyDemoApp</servlet-name>
		<!-- <url-pattern>*.html</url-pattern>  -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>

-------------------------
D:\project\Spring-projects\SpringMVC\springMVCDemo\src\main\webapp\WEB-INF\config
myDemoApp-ServletConfig.xml

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan base-package="com.demo.controllers" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<!-- <mvc:resources mapping="/resources/**" location="/resources/" />   -->
 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<property name="maxUploadSize" value="5252880" />    
    </bean>
     
	<mvc:annotation-driven />
	
</beans>

-------------------
D:\project\Spring-projects\SpringMVC\springMVCDemo\src\main\webapp\WEB-INF\jsp
keep jsp files here

-------------------

pom.xml

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.demo</groupId>
	<artifactId>springMVCDemo</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>springMVCDemo</name>

	<properties>
		<jdk.version>1.6</jdk.version>
		<spring.version>3.2.13.RELEASE</spring.version> 
		<!-- <spring.version>4.0.6.RELEASE</spring.version>  -->
		<jstl.version>1.2</jstl.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${jstl.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.validation</groupId>
		    <artifactId>validation-api</artifactId>
		    <version>1.1.0.Final</version>
		</dependency>
	
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>5.1.2.Final</version>
		</dependency>
	    
	    <dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.2</version>
		</dependency>
			                         			

	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.11.v20150529</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/springMVCDemo</contextPath>
					</webApp>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<wtpContextName>spring3</wtpContextName>
				</configuration>
			</plugin>
			
		</plugins>
	</build>

</project>
